!function(){$(".sl-bonuses-slick").slick({dots:!1,infinite:!0,speed:200,arrows:!0,slidesToShow:3,slidesToScroll:1,autoplay:!0})}();
$("section.b-parallax").each(function(){var o=$(this);$(window).scroll(function(){var n=-($(window).scrollTop()/5),c=n+260,i="center "+c+"px";o.css("background-position",i)})});
!function(t){t.fn.boxLength=function(e){return this.each(function(){function n(){g.length>i[18]&&35>s?x.text(g.slice(0,i[18])+" ..."):g.length>i[40]&&s>=35&&x.text(g.slice(0,i[40])+" ...")}var h=t(this),i=t.extend({},{18:200,40:170},e),x=h.find("p"),g=x.text(),s=h.closest("a").find("h3").height();n()})},0!==t(".b-news__text p").length&&t(".b-news__text").boxLength(),0!==t(".b-big-news__text p").length&&t(".b-big-news__text .text").boxLength({18:800,40:700})}(jQuery);
$(document).ready(function(){$(".slider-slick").slick({dots:!0,infinite:!0,speed:500,fade:!0,arrows:!0,cssEase:"linear"})});
$(document).ready(function(){$(".b-carousel").slick({dots:!1,infinite:!0,speed:200,arrows:!0,slidesToShow:7,slidesToScroll:1,autoplay:!0})});
!function(){if(0!==$("[data-bg]").length){var a=$("[data-bg]").attr("data-bg");document.querySelector(".b-action").style.backgroundImage="url('"+window.location.origin+"/project/pab"+a+"')"}}();
!function(){function o(){var o=new ymaps.Map("map",{center:[55.8083,37.5868],zoom:16,controls:["zoomControl"]}),a=new ymaps.Placemark([55.8083,37.5868]);o.geoObjects.add(a),o.behaviors.disable("scrollZoom")}0!==$("#map").length&&ymaps.ready(o)}();
!function(){var e={s_country:"Выберите страну",s_region:"Выберите регион",s_city:"Выберите город"};for(var r in e){var s="#"+r,c=e[r];0!=$(s).length&&c!==!1?$(s).select2({placeholder:c,minimumResultsForSearch:1/0}):$(s).select2({minimumResultsForSearch:1/0})}}();
$("li.active a").click(function(c){c.preventDefault()});
//# sourceMappingURL=data:application/json;base64,
